{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 0,
    "pending": 0,
    "failures": 4,
    "start": "2024-06-14T05:32:09.057Z",
    "end": "2024-06-14T05:32:29.265Z",
    "duration": 20208,
    "testsRegistered": 4,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f1cc5f43-3625-4865-8838-43079c970c08",
      "title": "",
      "fullFile": "C:\\Users\\user\\Desktop\\Practica-De-Automation\\Test\\Pruebas de Interfaz.spec.js",
      "file": "\\Test\\Pruebas de Interfaz.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "573a0039-e48d-40f5-869e-a376ab66924f",
          "title": "Interfaz test cases",
          "fullFile": "C:\\Users\\user\\Desktop\\Practica-De-Automation\\Test\\Pruebas de Interfaz.spec.js",
          "file": "\\Test\\Pruebas de Interfaz.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Interfaz test cases\"",
              "fullTitle": "Interfaz test cases \"before all\" hook in \"Interfaz test cases\"",
              "timedOut": false,
              "duration": 19006,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(Browser.CHROME).build();\nawait driver.get(\"http://www.automationpractice.pl/index.php\");",
              "err": {},
              "uuid": "9890d6fd-990c-4871-b7b2-a403110fa8e6",
              "parentUUID": "573a0039-e48d-40f5-869e-a376ab66924f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Interfaz test cases\"",
              "fullTitle": "Interfaz test cases \"after all\" hook in \"Interfaz test cases\"",
              "timedOut": false,
              "duration": 1087,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await new Promise((r) => setTimeout(r, 1000));\nawait driver.quit();",
              "err": {},
              "uuid": "5f281e94-f268-4467-a290-c2b0bff39881",
              "parentUUID": "573a0039-e48d-40f5-869e-a376ab66924f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Home page debe de mostrar las pesta単as segun el dise単o",
              "fullTitle": "Interfaz test cases Home page debe de mostrar las pesta単as segun el dise単o",
              "timedOut": false,
              "duration": 19,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let elements = await driver.findElements(\n  By.xpath(\"//*[contains(text(), 'Blog')]\")\n);\nassert.equal(elements.length, 0, \"El texto esta presente\");",
              "err": {
                "message": "AssertionError: El texto esta presente",
                "estack": "AssertionError [ERR_ASSERTION]: El texto esta presente\n    at Context.<anonymous> (Test\\Pruebas de Interfaz.spec.js:21:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 1\n+ 0\n"
              },
              "uuid": "e1e34ea5-3c08-4748-9139-580ab892da0d",
              "parentUUID": "573a0039-e48d-40f5-869e-a376ab66924f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verificar que el texto del shopping cart sea correcto",
              "fullTitle": "Interfaz test cases Verificar que el texto del shopping cart sea correcto",
              "timedOut": false,
              "duration": 35,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let element = await driver.findElement(By.xpath(\"//*[contains(text(), 'Cart')]\"));\nlet text = await element.getText();\nassert.equal(text, \"Shopping Cart\");",
              "err": {
                "message": "AssertionError: 'Cart' == 'Shopping Cart'",
                "estack": "AssertionError [ERR_ASSERTION]: 'Cart' == 'Shopping Cart'\n    at Context.<anonymous> (Test\\Pruebas de Interfaz.spec.js:27:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Cart\n+ Shopping Cart\n"
              },
              "uuid": "c009ba8c-0a45-4b6e-a2f3-d6897eb0529c",
              "parentUUID": "573a0039-e48d-40f5-869e-a376ab66924f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verificar aparicion de ofertas populares",
              "fullTitle": "Interfaz test cases Verificar aparicion de ofertas populares",
              "timedOut": false,
              "duration": 26,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let element = await driver.findElement(By.xpath(\"//*[contains(text(), 'Blouse')]\"));\nlet text = await element.getText();\nassert.equal(text, \"Blouse\");",
              "err": {
                "message": "AssertionError: '' == 'Blouse'",
                "estack": "AssertionError [ERR_ASSERTION]: '' == 'Blouse'\n    at Context.<anonymous> (Test\\Pruebas de Interfaz.spec.js:34:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "+ Blouse\n"
              },
              "uuid": "312b75bc-898d-4b38-8603-94e3ed287ee1",
              "parentUUID": "573a0039-e48d-40f5-869e-a376ab66924f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verificar que la imagen de perfil de Facebook aparezca en la pagina de inicio",
              "fullTitle": "Interfaz test cases Verificar que la imagen de perfil de Facebook aparezca en la pagina de inicio",
              "timedOut": false,
              "duration": 20,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let element = await driver.findElement(By.xpath(\"//*[contains(text(), 'Blouse')]\"));\nlet text = await element.getText();\nassert.equal(text, \"Blouse\");",
              "err": {
                "message": "AssertionError: '' == 'Blouse'",
                "estack": "AssertionError [ERR_ASSERTION]: '' == 'Blouse'\n    at Context.<anonymous> (Test\\Pruebas de Interfaz.spec.js:42:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "+ Blouse\n"
              },
              "uuid": "c5b14b9c-c400-4c6f-8801-a6141e436696",
              "parentUUID": "573a0039-e48d-40f5-869e-a376ab66924f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e1e34ea5-3c08-4748-9139-580ab892da0d",
            "c009ba8c-0a45-4b6e-a2f3-d6897eb0529c",
            "312b75bc-898d-4b38-8603-94e3ed287ee1",
            "c5b14b9c-c400-4c6f-8801-a6141e436696"
          ],
          "pending": [],
          "skipped": [],
          "duration": 100,
          "root": false,
          "rootEmpty": false,
          "_timeout": 500000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 500000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}